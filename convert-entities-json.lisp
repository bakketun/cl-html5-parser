(ql:quickload "json-streams")


(defun read-entities.json ()
  (with-open-file (in "entities.json")
    (loop :for (entity . (type . data)) :in (cdr (json-streams:json-parse in))
          :collect (cons (subseq entity 1) (cddr (assoc "codepoints" data :test #'string=))))))


(defun write-entities.lisp (entities)
  (with-open-file (out "entities.lisp" :direction :output :if-exists :supersede)
    (format out "~&;;;; Generated by convert-entities-json.lisp from:")
    (format out "~&;;;; https://html.spec.whatwg.org/multipage/named-characters.html")
    (format out "~&;;;; https://html.spec.whatwg.org/entities.json")
    (format out "~&~%(in-package :html5-parser)")
    (format out "~&~%(defparameter *entities*")
    (format out "~&  '(")
    (dolist (entity entities)
      (format out "~&    ~S~&" entity))
    (format out "    ))~&")))


(write-entities.lisp (read-entities.json))
